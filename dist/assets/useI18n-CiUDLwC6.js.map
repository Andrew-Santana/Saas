{"version":3,"file":"useI18n-CiUDLwC6.js","sources":["../../src/hooks/useTranslationWithFallback.ts","../../src/hooks/useI18n.ts"],"sourcesContent":["import { useTranslation } from 'react-i18next';\n\n/**\n * Hook personalizado que adiciona fallbacks robustos para traduções ausentes\n */\nexport const useTranslationWithFallback = (namespace?: string) => {\n  const { t, i18n } = useTranslation(namespace);\n\n  /**\n   * Função de tradução com fallback inteligente\n   * @param key - Chave da tradução\n   * @param options - Opções de tradução\n   * @param fallback - Texto de fallback personalizado\n   */\n  const tWithFallback = (\n    key: string, \n    options?: any, \n    fallback?: string\n  ): string => {\n    try {\n      // Tentar traduzir normalmente\n      const translation = t(key, options);\n      \n      // Se a tradução retornou a própria chave, significa que não foi encontrada\n      if (translation === key) {\n        console.warn(`Translation missing for key: ${key} in language: ${i18n.language}`);\n        \n        // Tentar fallback para inglês se não estivermos já em inglês\n        if (i18n.language !== 'en-US') {\n          const englishTranslation = t(key, { ...options, lng: 'en-US' });\n          if (englishTranslation !== key) {\n            console.info(`Using English fallback for key: ${key}`);\n            return englishTranslation;\n          }\n        }\n        \n        // Usar fallback personalizado ou gerar um baseado na chave\n        return fallback || generateFallbackFromKey(key);\n      }\n      \n      return translation;\n    } catch (error) {\n      console.error(`Translation error for key: ${key}:`, error);\n      return fallback || generateFallbackFromKey(key);\n    }\n  };\n\n  /**\n   * Gera um texto de fallback baseado na chave\n   */\n  const generateFallbackFromKey = (key: string): string => {\n    // Converter chaves como \"agendaPro.hero.title\" em texto legível\n    const parts = key.split('.');\n    const lastPart = parts[parts.length - 1];\n    \n    // Converter camelCase para texto legível\n    const readableText = lastPart\n      .replace(/([A-Z])/g, ' $1')\n      .replace(/^./, str => str.toUpperCase())\n      .trim();\n    \n    return `[${readableText}]`;\n  };\n\n  /**\n   * Verifica se uma tradução existe\n   */\n  const hasTranslation = (key: string): boolean => {\n    const translation = t(key);\n    return translation !== key;\n  };\n\n  /**\n   * Obtém todas as chaves de tradução disponíveis para um namespace\n   */\n  const getAvailableKeys = (namespace?: string): string[] => {\n    try {\n      const resources = i18n.getResourceBundle(i18n.language, namespace || 'translation');\n      return Object.keys(resources);\n    } catch (error) {\n      console.error('Error getting available keys:', error);\n      return [];\n    }\n  };\n\n  /**\n   * Valida se todas as chaves necessárias existem\n   */\n  const validateTranslations = (requiredKeys: string[]): {\n    missing: string[];\n    present: string[];\n  } => {\n    const missing: string[] = [];\n    const present: string[] = [];\n\n    requiredKeys.forEach(key => {\n      if (hasTranslation(key)) {\n        present.push(key);\n      } else {\n        missing.push(key);\n      }\n    });\n\n    return { missing, present };\n  };\n\n  return {\n    t: tWithFallback,\n    i18n,\n    hasTranslation,\n    getAvailableKeys,\n    validateTranslations,\n    // Manter a função original t para casos especiais\n    tOriginal: t\n  };\n};\n\nexport default useTranslationWithFallback;\n","import { useTranslation } from 'react-i18next';\nimport { useTranslationWithFallback } from './useTranslationWithFallback';\n\nexport const useI18n = () => {\n  const { t, i18n, hasTranslation, validateTranslations } = useTranslationWithFallback();\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n  };\n\n  return { \n    t, \n    i18n, \n    hasTranslation, \n    validateTranslations,\n    changeLanguage, \n    currentLanguage: i18n.language,\n    languages: i18n.languages\n  };\n};"],"names":["useTranslationWithFallback","namespace","i18n","useTranslation","tWithFallback","key","options","fallback","translation","englishTranslation","generateFallbackFromKey","error","parts","str","hasTranslation","resources","requiredKeys","missing","present","useI18n","t","validateTranslations","lng"],"mappings":"kCAKO,MAAMA,EAA8BC,GAAuB,CAChE,KAAM,CAAE,EAAG,KAAAC,CAAA,EAASC,EAAwB,EAQtCC,EAAgB,CACpBC,EACAC,EACAC,IACW,CACX,GAAI,CAEF,MAAMC,EAAc,EAAEH,EAAKC,CAAO,EAGlC,GAAIE,IAAgBH,EAAK,CAIvB,GAHA,QAAQ,KAAK,gCAAgCA,CAAG,iBAAiBH,EAAK,QAAQ,EAAE,EAG5EA,EAAK,WAAa,QAAS,CAC7B,MAAMO,EAAqB,EAAEJ,EAAK,CAAE,GAAGC,EAAS,IAAK,QAAS,EAC9D,GAAIG,IAAuBJ,EACzB,eAAQ,KAAK,mCAAmCA,CAAG,EAAE,EAC9CI,CAEX,CAGA,OAAOF,GAAYG,EAAwBL,CAAG,CAChD,CAEA,OAAOG,CACT,OAASG,EAAO,CACd,eAAQ,MAAM,8BAA8BN,CAAG,IAAKM,CAAK,EAClDJ,GAAYG,EAAwBL,CAAG,CAChD,CACF,EAKMK,EAA2BL,GAAwB,CAEvD,MAAMO,EAAQP,EAAI,MAAM,GAAG,EAS3B,MAAO,IARUO,EAAMA,EAAM,OAAS,CAAC,EAIpC,QAAQ,WAAY,KAAK,EACzB,QAAQ,KAAMC,GAAOA,EAAI,YAAA,CAAa,EACtC,KAAA,CAEoB,GACzB,EAKMC,EAAkBT,GACF,EAAEA,CAAG,IACFA,EAqCzB,MAAO,CACL,EAAGD,EACH,KAAAF,EACA,eAAAY,EACA,iBAnCwBb,GAAiC,CACzD,GAAI,CACF,MAAMc,EAAYb,EAAK,kBAAkBA,EAAK,SAAUD,GAAa,aAAa,EAClF,OAAO,OAAO,KAAKc,CAAS,CAC9B,OAASJ,EAAO,CACd,eAAQ,MAAM,gCAAiCA,CAAK,EAC7C,CAAA,CACT,CACF,EA4BE,qBAvB4BK,GAGzB,CACH,MAAMC,EAAoB,CAAA,EACpBC,EAAoB,CAAA,EAE1B,OAAAF,EAAa,QAAQX,GAAO,CACtBS,EAAeT,CAAG,EACpBa,EAAQ,KAAKb,CAAG,EAEhBY,EAAQ,KAAKZ,CAAG,CAEpB,CAAC,EAEM,CAAE,QAAAY,EAAS,QAAAC,CAAA,CACpB,EASE,UAAW,CAAA,CAEf,EChHaC,EAAU,IAAM,CAC3B,KAAM,CAAE,EAAAC,EAAG,KAAAlB,EAAM,eAAAY,EAAgB,qBAAAO,CAAA,EAAyBrB,EAAA,EAM1D,MAAO,CACL,EAAAoB,EACA,KAAAlB,EACA,eAAAY,EACA,qBAAAO,EACA,eATsBC,GAAgB,CACtCpB,EAAK,eAAeoB,CAAG,CACzB,EAQE,gBAAiBpB,EAAK,SACtB,UAAWA,EAAK,SAAA,CAEpB"}
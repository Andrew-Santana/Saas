#!/usr/bin/env node

/**
 * Script para testar tradu√ß√µes e gerar relat√≥rios de cobertura
 */

const fs = require('fs');
const path = require('path');

// Importar o validador de tradu√ß√µes
const { TranslationValidator, DEMO_PAGE_REQUIRED_KEYS } = require('../src/utils/translationValidator');

async function runTranslationTests() {
  console.log('üåç Executando testes de tradu√ß√£o...\n');

  try {
    // Gerar relat√≥rio de cobertura
    const report = TranslationValidator.generateCoverageReport(DEMO_PAGE_REQUIRED_KEYS);
    
    console.log('üìä RELAT√ìRIO DE COBERTURA DE TRADU√á√ïES');
    console.log('=====================================\n');
    
    console.log(`üìà Resumo:`);
    console.log(`   ‚Ä¢ Total de chaves: ${report.summary.totalKeys}`);
    console.log(`   ‚Ä¢ Idiomas: ${report.summary.languages.join(', ')}`);
    console.log(`   ‚Ä¢ Cobertura m√©dia: ${report.summary.averageCoverage.toFixed(1)}%\n`);
    
    console.log('üìã Detalhes por idioma:');
    console.log('----------------------');
    
    Object.entries(report.details).forEach(([language, details]) => {
      const status = details.coverage >= 95 ? '‚úÖ' : details.coverage >= 80 ? '‚ö†Ô∏è' : '‚ùå';
      console.log(`${status} ${language}:`);
      console.log(`   ‚Ä¢ Cobertura: ${details.coverage.toFixed(1)}%`);
      console.log(`   ‚Ä¢ Presentes: ${details.presentCount}`);
      console.log(`   ‚Ä¢ Ausentes: ${details.missingCount}`);
      
      if (details.missingKeys.length > 0) {
        console.log(`   ‚Ä¢ Chaves ausentes: ${details.missingKeys.join(', ')}`);
      }
      console.log('');
    });
    
    // Verificar se h√° problemas
    const hasIssues = Object.values(report.details).some(details => details.coverage < 95);
    
    if (hasIssues) {
      console.log('‚ö†Ô∏è  ATEN√á√ÉO: Alguns idiomas t√™m cobertura abaixo de 95%');
      console.log('   Considere adicionar as tradu√ß√µes ausentes.\n');
    } else {
      console.log('‚úÖ Todas as tradu√ß√µes est√£o com cobertura adequada!\n');
    }
    
    // Salvar relat√≥rio em arquivo
    const reportPath = path.join(__dirname, '../translation-coverage-report.json');
    fs.writeFileSync(reportPath, JSON.stringify(report, null, 2));
    console.log(`üìÑ Relat√≥rio salvo em: ${reportPath}`);
    
    return report;
    
  } catch (error) {
    console.error('‚ùå Erro ao executar testes de tradu√ß√£o:', error);
    process.exit(1);
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  runTranslationTests()
    .then(() => {
      console.log('\nüéâ Testes de tradu√ß√£o conclu√≠dos!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Falha nos testes de tradu√ß√£o:', error);
      process.exit(1);
    });
}

module.exports = { runTranslationTests };
